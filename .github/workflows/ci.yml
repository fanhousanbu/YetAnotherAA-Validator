name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  # Job 1: Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=high

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v4
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high

  # Job 2: Code quality checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Run linter
        run: npm run lint

  # Job 3: Build project
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          CI: true

  # Job 4: Run tests
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          CI: true
          NODE_ENV: test

  # Job 5: Solidity contracts
  contracts:
    name: Smart Contracts
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Build contracts
        run: forge build

      - name: Run tests
        run: forge test -vvv

      - name: Check contract sizes
        run: forge build --sizes

      - name: Run coverage
        run: forge coverage

  # Job 6: Type checking
  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Use Node.js 20
        uses: actions/setup-node@v6
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript compiler
        run: npm run type-check

  # Job 7: CodeQL Analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["javascript-typescript"]
    steps:
      - uses: actions/checkout@v5

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v4
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v4

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v4

  # Job 8: Summary job for branch protection
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [security, quality, build, test, contracts, typecheck, codeql]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          if [[ "${{ needs.security.result }}" == "success" &&
                "${{ needs.quality.result }}" == "success" &&
                "${{ needs.build.result }}" == "success" &&
                "${{ needs.test.result }}" == "success" &&
                "${{ needs.contracts.result }}" == "success" &&
                "${{ needs.typecheck.result }}" == "success" &&
                "${{ needs.codeql.result }}" == "success" ]]; then
            echo "All CI checks passed!"
          else
            echo "Some CI checks failed"
            exit 1
          fi
